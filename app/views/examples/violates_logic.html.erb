<% provide(:title, 'Logic error') %>
<div class="row">
  <article class="col-3 bg-truth">
    <h3>
      <%= I18n.t("examples.violates_logic.you_were_looking_for_an_object_with_the_following_truths", 
                 default: "You were looking for an object with the following truths:") %>
    </h3>
    <ul>
      <% @satisfies.each do |atom| %>
        <%= render partial: 'atoms/show',
                   locals: { atom: atom, 
                             modifier: t('logic.is') } %>
      <% end %>
    </ul>
  </article>
  <article class="col-3 bg-truth">
    <div class="content">
      <h3>
        <%= I18n.t("examples.violates_logic.the_following_additional_truths_were_derived",
                   default: "The following additional truths were derived:") %>
      </h3>
      <ul>
        <% @satisfied_atoms_with_implications.second.each_key do |i| %>
          <% unless @satisfies.include?(i.implies) %>
            <%= render partial: 'atoms/show',
                       locals: { atom: i.implies,
                                 modifier: t('logic.is'),
                                 implication:  i } %>
          <% end %>
        <% end %>
      </ul>
    </article>
    <article class="col-3 bg-warning">
      <h3>
        <%= I18n.t("examples.violates_logic.you_were_looking_for_an_object_with_the_following_falsehoods",
                   default: "You were looking for an object with the following falsehoods:") %>
      </h3>
      <ul>
        <% @violates.each do |atom| %>
          <%= render partial: 'atoms/show',
                     locals: { atom: atom,
                               modifier: t('logic.is_not') } %>
        <% end %>
      </ul>
    </article>
    <article class="col-3 bg-falsehood">
      <h3>
        <%= I18n.t("examples.violates_logic.i_found_the_following_contradiction",
                   default: "I found the following contradiction:") %>
      </h3>
      <ul>
        <% (@satisfied_atoms & @violates).each do |atom| %>
          <%= render partial: 'atoms/show',
                     locals: { atom: atom,
                               modifier: t('logic.is_and_is_not') } %>
        <% end %>
      </ul>
    </article>
  </div>
</div>
