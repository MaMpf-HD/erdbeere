<% edit ||= false %>
<article class="alert alert-<%= success == 'truth' ? 'success' : 'danger' %>">

	<% if proof.sort == 'example' %>
		<strong>
			<%= t('proof.want_to_show') %>:
		</strong>
		<%= render partial: 'atoms/inline_atom',
							 locals: { atom: Atom.find(proof.assumption.keys.first),
							 					 modifier: true.in?(proof.assumption.values) ? t('proof.isnt') : t('proof.is'),
							 					 example: example,
							 					 edit: edit } %>
		<br>
		<strong>
			<%= t('proof.we_use') %>:
		</strong>
		<br>
		<% proof.used_implications.each do |k,v| %>
			<%= "(I#{k})" %>
			<%= render partial: 'implications/show',
								 locals: { implication: Implication.find(v),
								 					 edit: edit } %>
			<br>
		<% end %>
		<strong>
			<%= t('proof.we_know') %>:
		</strong>
		<br>
		<% proof.premises.each do |k,v| %>
			<%= "(V#{k})" %>
			<%= render partial: 'atoms/inline_atom',
								 locals: { atom: Atom.find(v.keys.first),
								 					 modifier: false.in?(v.values) ? t('proof.isnt') : t('proof.is'),
								 					 example: example,
								 					 edit: edit } %>
			<br>
		<% end %>
	<% else %>
		<%= t('proof.there_is_no_structure',
					structure: proof.structure.name) %>
		<br>
		<% proof.premises.each do |k,v| %>
			<%= "(V#{k})" %>
			<%= render partial: 'atoms/inline_atom',
								 locals: { atom: Atom.find(v.keys.first),
								 					 modifier: false.in?(v.values) ? t('proof.isnt') : t('proof.is'),
								 					 edit: edit } %>
			<br>
		<% end %>

		<% if proof.used_implications.any? %>
			<strong>
				<%= t('proof.we_use') %>:
			</strong>
			<br>
			<% proof.used_implications.each do |k,v| %>
				<%= "(I#{k})" %>
				<%= render partial: 'implications/show',
									 locals: { implication: Implication.find(v),
									 					 edit: edit } %>
				<br>
			<% end %>
		<% end %>

		<% if proof.axioms.any? %>
			<%= t('proof.use_axioms_html',
						structure: proof.structure.name) %>:
			<br>
			<% proof.axioms.each do |k,v| %>
				<%= "(A#{k})" %>
				<%= render partial: 'atoms/inline_atom',
									 locals: { atom: Atom.find(v.keys.first),
									 					 modifier: false.in?(v.values) ? t('proof.isnt') : t('proof.is'),
									 					 edit: edit } %>
			<% end %>
			<br>
		<% end %>

	<% end %>

	<strong>
		<%= t('proof.proof') %>:
	</strong>
	<br>
	<span class="assumption">
		<%= t('proof.assumption') %>:
	</span>
	<% if proof.sort == 'find' %>
		<%= t('proof.suppose_the_contrary',
					structure: proof.structure.name) %>
	<% else %>
		<%= render partial: 'atoms/inline_atom',
							 locals: { atom: Atom.find(proof.assumption.keys.first),
							 					 modifier: true.in?(proof.assumption.values) ? t('proof.is') : t('proof.isnt'),
							 					 example: example,
							 					 edit: edit } %>
	<% end %>
	<br>
	<% proof.steps.each do |i,s| %>
		<span class="badge bg-secondary">
			<%= i %>
		</span>
		<% if s[:conclusion] != :contradiction %>
			<%= render partial: 'atoms/inline_atom',
								 locals: { atom: Atom.find(s[:conclusion].keys.first),
								 					 modifier: true.in?(s[:conclusion].values) ? t('proof.is') : t('proof.isnt'),
								 					 example: example,
								 					 edit: edit } %>
		<% else %>
			<%= t('proof.contradiction') %> &#8623;
		<% end %>
		<br>
		<i>
			<%= t('proof.follows_from') %>:
		</i>
		<% s[:used].each_with_index do |u, i| %>
			<% if u.first == :implication %>
				<%= "I(#{u.second})" %>
			<% elsif u.first == :premise %>
				<%= "V(#{u.second})" %>
			<% elsif u.first == :axiom %>
				<%= "A(#{u.second})" %>
			<% elsif u.first == :step %>
				<span class="badge bg-secondary">
					<%= u.second %>
				</span>
			<% elsif u.first == :assumption %>
				<%= t('proof.assumption') %>
			<% end %>
			<%= i + 1 == s[:used].size ? '.' : ', ' %>
		<% end %>
		<br>
	<% end %>
</article>