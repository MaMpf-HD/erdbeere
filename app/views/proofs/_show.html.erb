<article class="alert alert-<%= success == 'truth' ? 'success' : 'danger' %> derivation">
<strong>
	<%= t('proof.want_to_show') %>:
</strong>
<%= Example.find(proof.example).description %>
<%= true.in?(proof.assumption.values) ? t('proof.isnt') : t('proof.is') %>
<%= Atom.find(proof.assumption.keys.first).property.name %>
<br>
<strong>
	<%= t('proof.we_use') %>:
</strong>
<br>
<% proof.used_implications.each do |k,v| %>
	<%= "(I#{k})" %>
	<%= render partial: 'implications/show',
						 locals: { implication: Implication.find(v) } %>
	<br>
<% end %>
<strong>
	<%= t('proof.we_know') %>:
</strong>
<br>
<% proof.premises.each do |k,v| %>
	<%= "(V#{k}) #{Example.find(proof.example).description}" %>
	<%= false.in?(v.values) ? t('proof.isnt') : t('proof.is') %>
	<%= Atom.find(v.keys.first).property.name %>
	<br>
<% end %>
<strong>
	<%= t('proof.assumption') %>:
</strong>
<%= Example.find(proof.example).description %>
<%= true.in?(proof.assumption.values) ? t('proof.is') : t('proof.isnt') %>
<%= Atom.find(proof.assumption.keys.first).property.name %>
<br>
<strong>
	<%= t('proof.proof') %>:
</strong>
<br>
<% proof.steps.each do |i,s| %>
	<%= t('proof.step') %>
	<%= "(#{i})" %>:
	<% if s[:conclusion] != :contradiction %>
		<%= Example.find(proof.example).description %>
		<%= true.in?(s[:conclusion].values) ? t('proof.is') : t('proof.isnt') %>
		<%= Atom.find(s[:conclusion].keys.first).property.name %>
	<% else %>
		<%= t('proof.contradiction') %>
	<% end %>
	<br>
	<i>
		<%= t('proof.follows_from') %>:
	</i>
	<% s[:used].each do |u| %>
		<% if u.first == :implication %>
			<%= "I(#{u.second}), " %>
		<% elsif u.first == :premise %>
			<%= "V(#{u.second}), " %>
		<% elsif u.first == :step %>
			<%= "#{t('proof.step')} (#{u.second}), " %>
		<% elsif u.first == :assumption %>
			<%= t('proof.assumption') %>
		<% end %>
	<% end %>
	<br>
<% end %>
</article>